Manual para a linguagem pikachu:

Todo programa deve ter a seguinte estrutura

program nome_do_programa begin
    corpo do programa
.

O corpo do programa deve conter funções que poderão ser chamadas pelo programa.
Tudo que não estiver dentro do corpo de função será considerado como um método main.
Funções podem ser declaradas da seguinte forma:

funct TYPE nome_da_funcao ( param1 , param2 , param3 ) begin
    corpo da função
end

Utilizando as construções da linguagem:

if => if ( condicao ) begin
          corpo do if
      end

if else => if ( condicao) begin
               corpo do if
           else
               corpo do else
           end

begin para abrir blocos. end para fechar blocos

for => for ( int ID = NUMBER|ID to NUMBER|ID ) begin
           corpo do for
       end

while => while ( cond ) begin
             corpo do while
         end

read => read ( "filename" ) ;

write => write ( "filename" , ID|STRING ) ;

Constantes booleanas:
true e false

Comparações booleanas:
== <= >= < > not and or != 

Tipos:
int, char, bool, float, string

= => assign

Numeros:
0 ou qualquer número de 1 ou mais digitos que não comece com 0.
A implementar: RE que reconheça float

IDs podem ser construídos começando por _ ou qualquer letra, seguidos 
de letras ou _ ou números.

Operadores matemáticas:
+ - * /

Arrays:

Tipos seguidos de 1 ou mais [].
Nota -> Arrays em si são outros tipos

Sobre as construções da linguagem:

Os Tokens deverão ser separados por espaços em brancos nessa versão da 
linguagem. Por exemplo: funct myFunct(int x)begin deve ser construída assim
funct myFunct ( int x ) begin

Todo statement, a não ser aquele que seja . ou seja abertura ou fechamento
de bloco (statements declarativos) devem ter um ponto e vírgula no final.

Sobre constantes de STRING:

Do jeito que os tokens estão sendo passados por enquanto para o analisador,
o programa por enquanto não aceita strings com espaços no meio, pois
na hora de passar os Tokens o INPUT está quebrando o programa em espaços
em branco. Caracteres aceitados em constantes de String: qualquer letra
do alfabeto inglês ou _ ou qualquer número ou . ou + ou - ou * ou / ou ?
Esses problemas serão corrigidos em versões futuras.
